Terminals which are not used

   NUM
   READ
   WRITE
   '='
   '+'
   '-'
   '*'
   '/'
   NEG
   '^'


Grammar

    0 $accept: input $end

    1 input: /* empty */
    2      | decl_sec

    3 decl_sec: DECL decl_list ENDDECL

    4 decl_list: decl
    5          | decl decl_list

    6 decl: type idlist ';'

    7 type: T_INT
    8     | T_BOOL

    9 idlist: id
   10       | id ',' idlist

   11 id: VAR


Terminals, with rules where they appear

$end (0) 0
'*' (42)
'+' (43)
',' (44) 10
'-' (45)
'/' (47)
';' (59) 6
'=' (61)
'^' (94)
error (256)
NUM (258)
VAR (259) 11
T_INT (260) 7
T_BOOL (261) 8
READ (262)
WRITE (263)
DECL (264) 3
ENDDECL (265) 3
NEG (266)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
input (21)
    on left: 1 2, on right: 0
decl_sec (22)
    on left: 3, on right: 2
decl_list (23)
    on left: 4 5, on right: 3 5
decl (24)
    on left: 6, on right: 4 5
type (25)
    on left: 7 8, on right: 6
idlist (26)
    on left: 9 10, on right: 6 10
id (27)
    on left: 11, on right: 9 10


state 0

    0 $accept: . input $end

    DECL  shift, and go to state 1

    $default  reduce using rule 1 (input)

    input     go to state 2
    decl_sec  go to state 3


state 1

    3 decl_sec: DECL . decl_list ENDDECL

    T_INT   shift, and go to state 4
    T_BOOL  shift, and go to state 5

    decl_list  go to state 6
    decl       go to state 7
    type       go to state 8


state 2

    0 $accept: input . $end

    $end  shift, and go to state 9


state 3

    2 input: decl_sec .

    $default  reduce using rule 2 (input)


state 4

    7 type: T_INT .

    $default  reduce using rule 7 (type)


state 5

    8 type: T_BOOL .

    $default  reduce using rule 8 (type)


state 6

    3 decl_sec: DECL decl_list . ENDDECL

    ENDDECL  shift, and go to state 10


state 7

    4 decl_list: decl .
    5          | decl . decl_list

    T_INT   shift, and go to state 4
    T_BOOL  shift, and go to state 5

    $default  reduce using rule 4 (decl_list)

    decl_list  go to state 11
    decl       go to state 7
    type       go to state 8


state 8

    6 decl: type . idlist ';'

    VAR  shift, and go to state 12

    idlist  go to state 13
    id      go to state 14


state 9

    0 $accept: input $end .

    $default  accept


state 10

    3 decl_sec: DECL decl_list ENDDECL .

    $default  reduce using rule 3 (decl_sec)


state 11

    5 decl_list: decl decl_list .

    $default  reduce using rule 5 (decl_list)


state 12

   11 id: VAR .

    $default  reduce using rule 11 (id)


state 13

    6 decl: type idlist . ';'

    ';'  shift, and go to state 15


state 14

    9 idlist: id .
   10       | id . ',' idlist

    ','  shift, and go to state 16

    $default  reduce using rule 9 (idlist)


state 15

    6 decl: type idlist ';' .

    $default  reduce using rule 6 (decl)


state 16

   10 idlist: id ',' . idlist

    VAR  shift, and go to state 12

    idlist  go to state 17
    id      go to state 14


state 17

   10 idlist: id ',' idlist .

    $default  reduce using rule 10 (idlist)
